#!/bin/bash
# vim: dict+=/usr/share/beakerlib/dictionary.vim cpt=.,w,b,u,t,i,k
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#   runtest.sh of /CoreOS/tang-operator/Sanity
#   Description: Basic functionality tests of the tang operator
#   Author: Martin Zeleny <mzeleny@redhat.com>
#   Author: Sergio Arroutbi <sarroutb@redhat.com>
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#   Copyright (c) 2021 Red Hat, Inc.
#
#   This program is free software: you can redistribute it and/or
#   modify it under the terms of the GNU General Public License as
#   published by the Free Software Foundation, either version 2 of
#   the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be
#   useful, but WITHOUT ANY WARRANTY; without even the implied
#   warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
#   PURPOSE.  See the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program. If not, see http://www.gnu.org/licenses/.
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Include Beaker environment
. /usr/share/beakerlib/beakerlib.sh || exit 1

rlJournalStart
    ############# MALWARE DETECTION TESTS ############
    ### Only execute if podman and clamscan commands exist ...
        rlPhaseStartTest "Malware Detection Testing"
            rlRun ". ../../TestHelpers/functions.sh" || rlDie "cannot import function script"
            installed_version=$(getVersion)
            if [[ "${installed_version}" == *"registry.redhat.io"* ]]; then
                installed_version="${installed_version/"registry.redhat.io"/"registry.access.redhat.com"}"
            fi
            ### Bundle Image
            analyzeVersion "${installed_version}"
            ### Container Image
            controller_name=$(getPodNameWithPrefix "tang-operator-controller" "${OPERATOR_NAMESPACE}" 1)
            rlAssertNotEquals "Checking controller_name is not empty" "${controller_name}" ""
            container_image=$("${OC_CLIENT}" -n "${OPERATOR_NAMESPACE}" describe pod "${controller_name}" | grep tang | tr -d ' ' | grep "^Image:" | awk -F "Image:" '{print $2}' | tail -1)
            if [[ $container_image == *"registry.redhat.io"* ]];then
                container_image="${container_image/"registry.redhat.io"/"registry.access.redhat.com"}"
            fi
            rlAssertEquals "Checking container image could be parsed appropriately" "$?" "0"
            rlAssertNotEquals "Checking container image is not empty" "${container_image}" ""
            dumpVerbose "Container Image:[${container_image}]"
            test -n "${container_image}" && analyzeVersion "${container_image}"
        rlPhaseEnd
    ############# /MALWARE DETECTION TESTS ###########
rlJournalPrintText
rlJournalEnd
